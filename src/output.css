/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: 'Inter';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-700: hsl(0, 0%, 20%);
    --color-gray-800: hsl(0, 0%, 12%);
    --color-gray-900: hsl(0, 0%, 8%);
    --color-white: hsl(0, 0%, 100%);
    --spacing: 0.25rem;
    --font-weight-normal: 400;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-green: hsl(75, 94%, 57%);
    --spacing-100: 8px;
    --spacing-150: 12px;
    --spacing-300: 24px;
    --spacing-400: 32px;
    --spacing-500: 40px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .static {
    position: static;
  }
  .mb-100 {
    margin-bottom: var(--spacing-100);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .table {
    display: table;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-\[clamp\(300px\,90vw\,384px\)\] {
    width: clamp(300px, 90vw, 384px);
  }
  .w-full {
    width: 100%;
  }
  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-stretch {
    align-items: stretch;
  }
  .gap-y-150 {
    row-gap: var(--spacing-150);
  }
  .gap-y-300 {
    row-gap: var(--spacing-300);
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .p-400 {
    padding: var(--spacing-400);
  }
  .text-center {
    text-align: center;
  }
  .text-green {
    color: var(--color-green);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .sm\:p-500 {
    @media (width >= 40rem) {
      padding: var(--spacing-500);
    }
  }
}
@font-face {
  font-family: 'Inter';
  src: url('../assets/fonts/Inter-VariableFont_slnt\,wght.ttf') format('truetype');
  font-weight: 400 600 700;
}
.text-preset {
  --tw-leading: 150%;
  line-height: 150%;
  --tw-tracking: 0px;
  letter-spacing: 0px;
}
.text-preset-1 {
  font-size: clamp(20px, 1.2vw, 24px);
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.text-preset-2 {
  font-size: clamp(14px, 1.2vw, 16px);
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.text-preset-3 {
  font-size: clamp(12px, 1.2vw, 14px);
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.text-preset-3-bold {
  font-size: clamp(12px, 1.2vw, 14px);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.attribution {
  padding-block: var(--spacing-100);
  text-align: center;
  font-size: clamp(12px, 1.2vw, 14px);
  color: var(--color-gray-400);
}
a {
  outline: none;
  &:focus {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  &:focus {
    outline-color: var(--color-green);
  }
}
.attribution > a {
  &:hover {
    @media (hover: hover) {
      color: var(--color-white);
    }
  }
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
section > a {
  cursor: pointer;
  border-radius: 8px;
  background-color: var(--color-gray-700);
  padding-block: var(--spacing-150);
  text-align: center;
  font-size: clamp(12px, 1.2vw, 14px);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 75ms;
  transition-duration: 75ms;
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green);
    }
  }
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-900);
    }
  }
}
a.disabled {
  pointer-events: none;
  cursor: not-allowed;
  color: var(--color-gray-400);
  text-decoration-line: none;
  opacity: 50%;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-outline-style: solid;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-font-weight: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
